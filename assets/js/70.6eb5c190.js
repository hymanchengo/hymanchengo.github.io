(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{584:function(s,t,a){"use strict";a.r(t);var e=a(4),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[s._v("#")]),s._v(" mysql")]),s._v(" "),a("h2",{attrs:{id:"组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[s._v("#")]),s._v(" 组件")]),s._v(" "),a("h3",{attrs:{id:"连接器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接器"}},[s._v("#")]),s._v(" 连接器")]),s._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意这边直接在命令行输入密码的方式不推荐")]),s._v("\nmysql -hlocalhost -p3306 -uroot -ph123\n")])])]),a("ol",[a("li",[s._v("命令中的mysql是客户端连接工具")]),s._v(" "),a("li",[s._v("敲入命令回车")])]),s._v(" "),a("ul",[a("li",[s._v("和server建立tcp连接\n"),a("ul",[a("li",[s._v("长连接\n"),a("code",[s._v("mysql_reset_connection()")])]),s._v(" "),a("li",[s._v("短连接")])])]),s._v(" "),a("li",[s._v("连接器验证用户名和密码")]),s._v(" "),a("li",[s._v("验证不通过，Access denied for user。验证通过，查询用户权限")])]),s._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("show processlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# wait_timeout为客户端空闲超时时间，到达此时间将和服务端断开 28800 s = 8h")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%timeout%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"查询缓存-mysql-8去除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询缓存-mysql-8去除"}},[s._v("#")]),s._v(" 查询缓存(mysql 8去除)")]),s._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# query_cache_type 默认为OFF,可设置为DEMAND,对指定查询语句实施查询缓存")]),s._v("\nshow variables like "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%cache%'")]),s._v("\n")])])]),a("h3",{attrs:{id:"词法、语法分析-做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法、语法分析-做什么"}},[s._v("#")]),s._v(" 词法、语法分析(做什么)")]),s._v(" "),a("p",[s._v("语法分析判断用户输入的内容是否符合SQL语法")]),s._v(" "),a("h3",{attrs:{id:"优化器-怎么做"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化器-怎么做"}},[s._v("#")]),s._v(" 优化器(怎么做)")]),s._v(" "),a("p",[s._v("多索引决定使用哪个索引\n多表连接，决定使用怎样的执行顺序")]),s._v(" "),a("h3",{attrs:{id:"执行器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行器"}},[s._v("#")]),s._v(" 执行器")]),s._v(" "),a("p",[s._v("执行器调用表对应的存储引擎提供的接口取表中符合条件的行，放到结果集中。")]),s._v(" "),a("p",[s._v("对于写操作需要额外的2个模块redo log和binlog")]),s._v(" "),a("h3",{attrs:{id:"binlog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#binlog"}},[s._v("#")]),s._v(" binlog")]),s._v(" "),a("p",[s._v("Server层的日志模块，适用于所有存储引擎。binlog用于记录逻辑操作，如以sql或者row更改前后的记录来追加到日志中。\n主要用于数据库的备份。")]),s._v(" "),a("ul",[a("li",[s._v("备份策略\n备份频率")])]),s._v(" "),a("h3",{attrs:{id:"redo-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redo-log"}},[s._v("#")]),s._v(" redo log")]),s._v(" "),a("p",[s._v("InnoDB引擎中的日志模块，最初作为插件形式引入MySQL。redo log提升写操作的性能还解决数据库崩溃\nbinlog不能解决的数据不一致问题。为什么redo log可以提升写的性能，之前没有InnoDB时，每次写操作\n都要将内存中的数据直接写会磁盘，而频繁操作IO势必影响性能。使用InnoDB后，可以先记录下对数据操作\n的日志，而不急于写回到磁盘，当数据库空闲或redo日志区满了时再写。这样可以提升数据库写性能。\nredo log实现上以一个文件组，如4个1G大小的文件构成的4G日志区。redo log保持2个指针，write_pos和\ncheck_point。write_pos表示当前写入点，check_point表示可用区终点。当write_pos追上check_point时\n引擎将对check_point后的内容进行擦除，如果4G区域都已用完，那么从头开始擦除。")]),s._v(" "),a("h3",{attrs:{id:"两阶段提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两阶段提交"}},[s._v("#")]),s._v(" 两阶段提交")]),s._v(" "),a("p",[s._v("当使用InnoDB时，redo log和bin log是如何协作以保证数据一致性的呢？")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" student"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" student "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 经过词法、语法分析，优化器使用索引，执行器找到id = 1的记录，更新")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" student "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("我们考量执行"),a("code",[s._v("update student set age = age + 1 where id = 1;")]),s._v("时发生了什么。\n优化器确定使用id索引，执行器调用InnoDB引擎，首先引擎判断id=1的数据是否在内存中，若不在，则从磁盘中查询出id=1的数据，载入到内存中。\n接下来将age字段更改为age+1，写redo log，redo log置为prepare状态，通知Server写binlog，binlog写完通知引擎，引擎将\nredo log置为commit状态。")]),s._v(" "),a("ul",[a("li",[s._v("redo log prepare")]),s._v(" "),a("li",[s._v("write to binlog")]),s._v(" "),a("li",[s._v("redo log commit")])])])}),[],!1,null,null,null);t.default=r.exports}}]);