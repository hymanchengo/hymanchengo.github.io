(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{562:function(t,s,n){"use strict";n.r(s);var e=n(4),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"git使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#git使用"}},[t._v("#")]),t._v(" git使用")]),t._v(" "),n("div",{staticClass:"language-shell script extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有分支")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -a\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前分支，带星号的表示当前分支")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 迁出远程分支。场景：远程仓库新建了一个分支，本地仓库新建一个分支用于追踪此远程分支")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b V1.066_TMP_B origin/V1.066_TMP_B\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景：github上fork了开源第三方仓库，如何保持fork到自己的远程仓库和原仓库的同步。且自己还能在自己的远程仓库里愉快玩耍。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同步第三方仓库和自己远程仓库步骤")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 首先fork这个操作我直接通过界面操作完成")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 将自己远程仓库clone到本地仓库 ")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone git@github.com:thinkbuildshare/geekbang-lessons.git\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 添加第三方仓库的源")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" mercygeeklesson git@github.com:mercyblitz/geekbang-lessons.git\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4. 迁出自己远程仓库的主分支")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b master origin/master\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5. 拉取第三方仓库master分支最新代码到本地当前分支（上一步骤设置为了master）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull mercygeeklesson master\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6. push到自己远程仓库完成同步")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在自己远程仓库中玩耍而不与第三方库冲突，我们采用新建分支的方式来做")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 在当前本地主分支中切出一个分支")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b lesson2\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改一波")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commmit -m "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"本地玩耍"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 由于远程仓库还没有这个分支，因此我们使用如下语句来操作")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --set-upstream origin lesson2\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 场景：比较代码更改前后功能生成的json结构是否一致")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 切出一个特性分支，在这个分支上进行改动。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b fastjson\n")])])])])}),[],!1,null,null,null);s.default=a.exports}}]);