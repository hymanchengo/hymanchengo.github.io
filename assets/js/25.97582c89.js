(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{560:function(t,n,a){"use strict";a.r(n);var s=a(4),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_2021-01"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-01"}},[t._v("#")]),t._v(" 2021-01")]),t._v(" "),a("h3",{attrs:{id:"_2021-1-8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-1-8"}},[t._v("#")]),t._v(" 2021-1-8")]),t._v(" "),a("ul",[a("li",[t._v("脾气谁都有，争吵适可而止，目的在于立刻解决问题。得理也饶人。")])]),t._v(" "),a("blockquote",[a("p",[t._v("记和测试的一次争论，测试咄咄逼人，最后是测试环境更新问题，我及时打住，不任由情绪争个高下。及时解决问题。")])]),t._v(" "),a("ul",[a("li",[t._v("出了问题，觉得懵逼，第一看日志，没日志，开启DEBUG模式。")])]),t._v(" "),a("blockquote",[a("p",[t._v("记一次向Sentry中写错误日志，程序报错，但Sentry无记录，完全无头绪，日志级别设为DEBUG，发现确实向Sentry服务器发送了POST请求，但返回403，然后上网搜索，结果居然\n是使用的Spring Boot Sentry Starter的版本问题。")])]),t._v(" "),a("ul",[a("li",[t._v("Java字节码分析，开放的学习心态")])]),t._v(" "),a("blockquote",[a("p",[t._v("第一次尝试看Java字节码，其实真没这么难，甚至有点小趣。没什么比亲自弄懂知识而不是听别人告诉你来得更酷了。")])]),t._v(" "),a("ul",[a("li",[t._v("自己的思考以各种方式和他人形成碰撞，收获更多")])]),t._v(" "),a("blockquote",[a("p",[t._v("自己搞了个简单的日志分析小工具（非完善版），再上网搜搜别人的，借鉴综合下，学到更多")])]),t._v(" "),a("h3",{attrs:{id:"_2021-1-13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-1-13"}},[t._v("#")]),t._v(" 2021-1-13")]),t._v(" "),a("ul",[a("li",[t._v("大段时间基本不太可能拥有了，零碎的时间见缝插针吧。")])]),t._v(" "),a("blockquote",[a("p",[t._v("记需要3.5小时观看录播视频")])]),t._v(" "),a("ul",[a("li",[t._v("真正安静地写一段程序也是不容易")])]),t._v(" "),a("blockquote",[a("p",[t._v("记运维和测试的骚扰。\n测试问研发流程或不知道流程这正常吗？")])]),t._v(" "),a("ul",[a("li",[t._v("redmine如果不去经常常看，研发提交问题时也不提醒，问题到我这边就会产生停滞")])]),t._v(" "),a("blockquote",[a("p",[t._v("是否可开发redmine插件进行通知"),a("br"),t._v("\nhttps://my.oschina.net/u/3218945/blog/3105188")])]),t._v(" "),a("ul",[a("li",[t._v("easy excel 字段自定义converter不生效问题")])]),t._v(" "),a("blockquote",[a("p",[t._v("待尝试 继承AutoConverter")])]),t._v(" "),a("h3",{attrs:{id:"_2021-1-14"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-1-14"}},[t._v("#")]),t._v(" 2021-1-14")]),t._v(" "),a("ul",[a("li",[t._v("价值")])]),t._v(" "),a("blockquote",[a("p",[t._v("每隔几个月，总有那么两天开始思考，提醒自己的价值。")])]),t._v(" "),a("ul",[a("li",[t._v("一问便问出bug。面向环境编程危险")])]),t._v(" "),a("blockquote",[a("p",[t._v("开发时闷头开发，自以为是式编程，问下设计，从话里行间居然发现自己在面向开发环境的配置编程\n程序中使用了equals来判定apollo配置的value，殊不知，真实环境中配置的value和开发环境有所\n区别。（本以为应该是一样的）")])]),t._v(" "),a("ul",[a("li",[t._v("大写的日啊，肠胃病又要犯了")])]),t._v(" "),a("blockquote",[a("p",[t._v("在本机windows虚拟机模拟真实部署。本机和虚拟机采用NAT的网络方式，虚拟机可以上网，我要做2件事，\n虚拟机能访问主机，这样通过主机启动Http-server可以将主机的压缩包资源下载到虚拟机。这件事的一个\n要点是虚拟机中查看ip，找到网关ip即可访问主机，第2件事是主机访问虚拟机里网站，虚拟机启动了nginx，\n网路配置了端口转发，但怎么也访问不了虚拟机上的nginx。为啥？结果发现，我本该访问主机的端口：\nlocalhost:转发端口8888，硬是访问了虚拟机端口：10.0.2.15:转发端口8888。然后从主机是不能ping通\n虚拟机的，使用虚拟机IP来访问又有何用？")])]),t._v(" "),a("h3",{attrs:{id:"_2021-1-15"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-1-15"}},[t._v("#")]),t._v(" 2021-1-15")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("oracle中存储过程类的脚本执行需要使用"),a("code",[t._v("/")]),t._v(","),a("code",[t._v(";")]),t._v("是不行的")])]),t._v(" "),a("li",[a("p",[t._v("关于http请求参数中出现的"),a("code",[t._v("[]")]),t._v("等字符，tomcat 8.5版本以上都会拦截返回400。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("1，使用post，业务衡量改造量\n2. tomcat server.xml里放宽这些字符（考量安全性）\n参考https://tomcat.apache.org/tomcat-8.5-doc/changelog.html\nhttps://tools.ietf.org/html/rfc7231#section-9.1")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("文件内容转字节数组\nhttps://howtodoinjava.com/java/io/read-file-content-into-byte-array/")])]),t._v(" "),a("li",[a("p",[t._v("javafx or eletron来搞小工具\nhttps://openjfx.io/highlights/15/")])]),t._v(" "),a("li",[a("p",[t._v("oracle\ndefault xx 需在 not null / null")])])]),t._v(" "),a("h3",{attrs:{id:"_2021-1-19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-1-19"}},[t._v("#")]),t._v(" 2021-1-19")]),t._v(" "),a("ul",[a("li",[t._v("真实部署前最好的方式是在相同或者逼近的环境中进行演练。\n"),a("ul",[a("li",[t._v("可以知道要准备哪些包和配置，知道步骤")]),t._v(" "),a("li",[t._v("可以事先摸清可能遇到的坑并填掉")]),t._v(" "),a("li",[t._v("真实部署可以更有效率")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("本次在windows部署nginx + spring boot + redis + mysql技术栈，聊一聊大致步骤")])]),t._v(" "),a("ul",[a("li",[t._v("首先我画了前后端分离的部署图。理清需要部署的组件。")]),t._v(" "),a("li",[t._v("下载准备目标环境支持的nginx,java,redis,mysql组件")]),t._v(" "),a("li",[t._v("安装时，主要注意的是安装为windows服务，使用"),a("a",{attrs:{href:"https://github.com/winsw/winsw",target:"_blank",rel:"noopener noreferrer"}},[t._v("winsw"),a("OutboundLink")],1),t._v("这个小工具（需要运行在.net framework上）")]),t._v(" "),a("li",[t._v("为了逼近真实环境，我在本机虚拟了windows 7。这里主要学到的是主机和虚拟机使用NAT网络，然后解决互相访问的问题。主机使用端口转发\n，虚拟机使用主机IP即可互相访问。")]),t._v(" "),a("li",[t._v("本次部署，学到的一点是部署需要靠自动化或半自动化。这次体验了下windows批处理脚本的编写，部署时效率提高了不少。")]),t._v(" "),a("li",[t._v("其次比较重点的就是nginx对前端和后端服务的配置，mysql schema提前导出（dump）及导入（source），一些初始化脚本，比如admin用户信息配置等")])]),t._v(" "),a("blockquote",[a("p",[t._v("总言之，自动化可以做得更好。")])]),t._v(" "),a("ul",[a("li",[t._v("补充昨天，同事提出的使用灰度来区分，一套研发环境切换pg和oracle的问题\n背景是我们使用了Apollo,而且项目代码支持pg和oracle 2套环境。研发每次开发测试不同db时需要修改Apollo配置，一种是直接在apollo portal里改，\n这样的问题是容易导致混乱，因为不是你一个人用研发的配置。还有一种是更改本地的apollo配置，这样不影响他人。但是改来改去也很繁琐。\n"),a("ul",[a("li",[t._v("之前有想做个工具来切换本地配置，思路是只需要第一次准备2个配置文件对应2套环境，要使用哪一套时，点击切换，实质上就是文件拷贝。")]),t._v(" "),a("li",[t._v("同事提出用apollo中的灰度来实现差异配置，将一套环境配置到灰度中，然后要用的人添加自己的ip到灰度中。这个方法也巧妙地解决了问题\n"),a("ul",[a("li",[t._v("我顺水推舟，让好东西和团队分享。这样团队受益，也共同遵守规范，以免引起混乱")])])]),t._v(" "),a("li",[t._v("事后来看，其实Apollo应该也是提供了些API来操作的。扩展下来，可做的事情也挺多的。这个痛点完全可以更加自动化掉。")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("可能你会好奇，为啥不建多个环境，是啊，为什么不呢？")])]),t._v(" "),a("ul",[a("li",[t._v("设计的愉悦来自思考，玩味")])]),t._v(" "),a("blockquote",[a("p",[t._v("记一个没有更多描述的双随机需求，随机从一堆人中找出指定的人干一些事。\n既然，没有更多约束，我自己便开始思考怎么实现这个程序，添加了轮，轮周期，间隔等概念，设计了2张表。这里面比较愉悦的是，如何制定双随机策略，\n构建策略的模型。\n感悟：懂得遵守别人制定的规则，也更要懂得自己制定设计规则，否则何来成长。")])]),t._v(" "),a("h3",{attrs:{id:"_2021-01-21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-01-21"}},[t._v("#")]),t._v(" 2021-01-21")]),t._v(" "),a("ul",[a("li",[t._v("win10 pg error running icacls"),a("br"),t._v("\n安装pg 12.5但是报类似如上的错误，而且弹窗中还有乱码，按照网上的说法，换了几个版本的Pg安装还是这个问题。最终也不知道哪根筋搭对了，\n这乱码有猫腻，发现里面有计算机名，想起来前几天改过计算机名。因此1，把计算机名改成了英文 2，把计算机名改成和用户名一致，重启居然好了。\n也没继续验证究竟是步骤1还是步骤2产生的效果。这运气。")])]),t._v(" "),a("h3",{attrs:{id:"_2021-01-27"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-01-27"}},[t._v("#")]),t._v(" 2021-01-27")]),t._v(" "),a("p",[t._v("前几天的感想一并补一补")]),t._v(" "),a("ul",[a("li",[t._v("百闻不如一试")])]),t._v(" "),a("blockquote",[a("p",[t._v("记使用sql多年，但对许多概念还是停留在浅显了解的层面。虽使用过oracle, sql server, mysql, postgres 但很多知识都是在使用时到网上搜索，\n并不成体系，没有沉淀。这些在学习postgres时自己从0到1建库，建表等一步步去学习和理解那些常用的知识点。一来构建大致的体系，二来，按照\n官方手册来进行知识理解和整理，感觉和从网上了解的只言片语，确实非常不一样，另外通过自己实际操作来理解这些知识点，又增强了对模棱两可的知识\n的理解。比如主键等其实是一种约束，在以往的认知里就知道主键，不能重复，且唯一，但完全忽略了约束的概念。另外创建唯一约束和主键约束时会创建\n索引，因为唯一约束是通过唯一索引来实施的，再比如连接分为cross连接，内连接和外连接，外连接又分为左连接，右连接及全连接。以前也是了解这些\n概念的，但是不能讲出来。说明理解还不透彻，现在以实例来操作一番，确实更清楚。当然数据库的深入学习还需要大量的实操。这只是开始，看了再多，\n确实不如自己操作一遍好啊。")])]),t._v(" "),a("ul",[a("li",[t._v("记一次问题排查")])]),t._v(" "),a("blockquote",[a("p",[t._v("oracle库里创建主键约束，发现自动创建的索引字段顺序没有按预期的那样改变。最后还原出来是发现：原先之前建了这个同名索引，再建约束时，它并没有\n再建索引，而是关联了这个索引。所以出现键中的字段顺序和索引中的字段顺序不一致。解决方法是先删了索引，再创建约束。或删除这个创建的约束的同时进行\n级联索引删除，再创建约束。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("order by性能和order by字段建索引")])]),t._v(" "),a("li",[a("p",[t._v("对索引的理解和使用")])]),t._v(" "),a("li",[a("p",[t._v("对dto是否该共享与微服务的思考\nhttp://www.vinsguru.com/microservices-architecture-how-to-share-dto-data-transfer-objects/")])]),t._v(" "),a("li",[a("p",[t._v("java课程资源\nhttps://github.com/eugenp/tutorials\nhttps://www.baeldung.com/")])])]),t._v(" "),a("h4",{attrs:{id:"_2021-01-28"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2021-01-28"}},[t._v("#")]),t._v(" 2021-01-28")]),t._v(" "),a("p",[t._v("Are interceptors thread safe? #1494\nhttps://github.com/square/okhttp/issues/1494\nInject two different instances of the same type with @Autowired\nhttps://stackoverflow.com/questions/25726444/inject-two-different-instances-of-the-same-type-with-autowired\nhttps://www.baeldung.com/spring-autowire-generics")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ServiceClient 类")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Scope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prototype"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceClient")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceClient")]),t._v(" serviceClient1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceClient")]),t._v(" serviceClient2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印日志看他们是否相等")]),t._v("\nlogger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"emsServiceClient="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" emsServiceClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlogger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"emlServiceClient="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" emlServiceClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),a("p",[t._v("类未声明为component。在配置中声明该类的bean，创建了类的实例并返回。该实例的实例字段也注入了值。 待实验。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("关于提问")]),t._v(" "),a("ul",[a("li",[t._v("知识类的问题，能自己通过搜索和学习解决的，建议自己搜索解决。")])])]),t._v(" "),a("li",[a("p",[t._v("关于生产表变更\nhttps://dba.stackexchange.com/questions/27153/alter-table-on-live-production-databases")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);